
*This page describes how to create a simple het cam robot.*

If not stated otherwise, the designs and documentation in this repository
are made publicly available under a
[[https://creativecommons.org/licenses/by/4.0/][Creative Commons Attribution 4.0 International (CC BY 4.0)]] License.

#+EMAIL:  science@georgauer.com

#+CAPTION: Image of the 3D-printed version of robot.
[[images/robot.jpg]]
#+BEGIN_QUOTE
Image of the robot.
#+END_QUOTE

** Introduction

Biocompatibility is of new untested materials is an important field.
This robot is a proposal of an automated het-cam experiment.

** TODO Mechanics - Files and Bill of Materials   

*** TODO  Design files


*** TODO Bill of Materials

- PLA
- stepper motor driver
- stepper motor
- arduino
- raspberry 4
- raspberry hq video camera

**** Machines (and/or):
- FDM 3D-printer (Prusa MK3, but any model with an similar precision would do)

**** Tools:
- Soldering iron
- Hand tools (screwdrivers etc.)

** TODO Assembly

* Software for the Microscope
** TODO Introduction 

git clone --branch microscope https://github.com/Georg-Auer/het-cam-dashboard.git

pip install -r requirements.txt
for torch on armv7l:
https://github.com/Kashu7100/pytorch-armv7l

# install torch on Raspberry 3/4:
sudo apt install libopenblas-dev libblas-dev m4 cmake cython python3-dev python3-yaml python3-setuptools
cd ~/Downloads
git clone https://github.com/Kashu7100/pytorch-armv7l.git
cd pytorch-armv7l/
sudo pip3 install torch-1.7.0a0-cp37-cp37m-linux_armv7l.whl
sudo pip3 install torchvision-0.8.0a0+45f960c-cp37-cp37m-linux_armv7l.whl

# install on all systems:
sudo pip3 install -r requirements.txt

How to make the script run on startup:
sudo nano /etc/rc.local
insert:
sudo CAMERA=opencv python3 ~/het-cam-dashboard/run.py &

or for additional logging:
sudo CAMERA=opencv python3 run.py & > /home/pi/Desktop/log.txt 2>&1


https://blog.miguelgrinberg.com/post/flask-video-streaming-revisited

to start an OpenCV session from bash, you can do this:

$ CAMERA=opencv python3 run.py

From a Windows command prompt you can do the same as follows:

on windows run:
$ python run.py CAMERA=opencv
$ py -3.7 run.py CAMERA=opencv

or:
$ set CAMERA=opencv
$ python run.py
$ py -3.7 run.py

or on linux with gunicorn:
# gunicorn -b 127.0.0.1:8080 app:app
# gunicorn -w 2 -b 127.0.0.1:8080 app:app
